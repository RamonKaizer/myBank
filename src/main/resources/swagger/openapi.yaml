openapi: 3.0.3
info:
  title: BackEnd Banking Project Manager
  contact:
    email: ramon_kaiser_marques@hotmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/v1
tags:
  - name: person
    description: Operations about person
paths:
  /person:
    post:
      tags:
        - person
      summary: Create person
      description: This can only be done by the logged off person.
      operationId: createPerson
      requestBody:
        description: Created person object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedPersonResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    PersonRequest:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Kennedy
        email:
          type: string
          example: john@email.com
        password:
          type: string
          format: password
          example: '12345'
        cpf:
          type: string
          example: '12345678910'
          minLength: 11
          maxLength: 14
        wallet:
          type: number
          format: double
          example: 120.667
        personType:
          type: string
          enum: [SHOPKEEPER, USER]
        birth:
          type: string
          format: date
          example: "1990-09-07"
      required:
        - firstName
        - lastName
        - email
        - password
        - cpf
        - wallet
        - personType
        - birth

    CreatedPersonResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: "Nome do usuario"
        accountNumber:
          type: string
          example: "312udncvuhsd901231cml"

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 500
        description:
          type: string
          example: "Erro ao cadastrar Usu√°rio"
        detailedMessage:
          type: string
          example: "SQL Exception -- etc"
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Erro'

    Erro:
      type: object
      properties:
        class:
          type: string
          example: "User"
        field:
          type: string
          example: "User.email"
        error:
          type: string
          example: "Campo nao pode ser nulo"